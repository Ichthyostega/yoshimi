From: abrolag <willgodfrey@musically.me.uk>
Date: Sat, 19 Jun 2021 11:30:33 +0100
Subject: minor UI fixes

...done right after the release
...included here in the DEB package

- Filer now correctly sets default path in favorites
- BugFix: GUI scale kemap label not resizing

partially includes commits....
7cc2b893
1393f478
4fd42be5
---
 Changelog                      |  6 ++++++
 doc/Yoshimi_2.0.1_features.txt | 19 -------------------
 doc/Yoshimi_2.0.2_features.txt | 19 +++++++++++++++++++
 src/LV2_Plugin/Config.cpp      |  1 -
 src/Misc/ConfBuild.h           |  2 +-
 src/UI/MasterUI.fl             | 11 ++++++-----
 src/UI/MicrotonalUI.fl         | 16 ++++++++--------
 src/UI/OscilGenUI.fl           |  6 +++---
 src/globals.h                  |  1 +
 9 files changed, 44 insertions(+), 37 deletions(-)
 delete mode 100644 doc/Yoshimi_2.0.1_features.txt
 create mode 100644 doc/Yoshimi_2.0.2_features.txt

diff --git a/Changelog b/Changelog
index f77d8fa..c80c0e3 100644
--- a/Changelog
+++ b/Changelog
@@ -1,5 +1,11 @@
 yoshimi 2.0.2
 
+2021-6-21 Will
+* BugFix: GUI scale kemap label not resizing.
+
+2021-6-19 Will
+* Filer now correctly sets default path in favorites.
+
 2021-6-17 Will
 * Manual now points to correct version.
 * Prepared for minor release.
diff --git a/doc/Yoshimi_2.0.1_features.txt b/doc/Yoshimi_2.0.1_features.txt
deleted file mode 100644
index 3ec2e92..0000000
--- a/doc/Yoshimi_2.0.1_features.txt
+++ /dev/null
@@ -1,19 +0,0 @@
-V 2.0.2
-
-In this release (in the 'doc' directory) we include a new user guide that is currently under development. This is entirely standard HTML and should be easier for general bowsing and reminders. The original PDF version is still available, but is now in the process of also being updated, and is titled "Yoshimi Advanced Reference Manual"
-
-There are also a few more small improvements, along with bugfixes.
-
-As usual, we welcome all suggestions and assistance - especially regarding documentation!
-
-Yoshimi source code is available from either:
-    https://sourceforge.net/projects/yoshimi
-Or:
-    https://github.com/Yoshimi/yoshimi
-
-Full build instructions are in 'INSTALL'.
-
-Our list archive is at:
-    https://www.freelists.org/archive/yoshimi
-To post, email to:
-    yoshimi@freelists.org
diff --git a/doc/Yoshimi_2.0.2_features.txt b/doc/Yoshimi_2.0.2_features.txt
new file mode 100644
index 0000000..c8b379c
--- /dev/null
+++ b/doc/Yoshimi_2.0.2_features.txt
@@ -0,0 +1,19 @@
+V 2.0.2
+
+In this release (in the 'doc' directory) we include a new user guide that is currently under development. This is entirely standard HTML and should be easier for general browsing and reminders. The original PDF version is still available, but is now in the process of also being updated, and is titled "Yoshimi Advanced Reference Manual"
+
+There are also a few more small improvements, along with bugfixes.
+
+As usual, we welcome all suggestions and assistance - especially regarding documentation!
+
+Yoshimi source code is available from either:
+    https://sourceforge.net/projects/yoshimi
+Or:
+    https://github.com/Yoshimi/yoshimi
+
+Full build instructions are in 'INSTALL'.
+
+Our list archive is at:
+    https://www.freelists.org/archive/yoshimi
+To post, email to:
+    yoshimi@freelists.org
diff --git a/src/LV2_Plugin/Config.cpp b/src/LV2_Plugin/Config.cpp
index 3381589..a10557f 100644
--- a/src/LV2_Plugin/Config.cpp
+++ b/src/LV2_Plugin/Config.cpp
@@ -30,7 +30,6 @@
 #include <errno.h>
 #include <cmath>
 #include <string>
-#include <argp.h>
 #include <libgen.h>
 #include <limits.h>
 
diff --git a/src/Misc/ConfBuild.h b/src/Misc/ConfBuild.h
index 0d0cce8..628c781 100644
--- a/src/Misc/ConfBuild.h
+++ b/src/Misc/ConfBuild.h
@@ -2,4 +2,4 @@
     ConfBuild.h
 */
 
-#define BUILD_NUMBER 1991
+#define BUILD_NUMBER 1992
diff --git a/src/UI/MasterUI.fl b/src/UI/MasterUI.fl
index 10d3fb0..a4d1b6d 100644
--- a/src/UI/MasterUI.fl
+++ b/src/UI/MasterUI.fl
@@ -1571,12 +1571,13 @@ Alan Calvert started the project}
           callback {//
     size_t pos = favebrowse->value();
     if (pos > 0)
-    {
         filerpath = clearfavecolour(pos);
-        if (filerpath.back() != '/')
-            filerpath += '/';
-    	fileroldpath->value(filerpath.c_str());
-    }
+    else
+       filerpath = clearfavecolour(1);
+
+    if (filerpath.back() != '/')
+        filerpath += '/';
+    fileroldpath->value(filerpath.c_str());
     fillfiler(type_name);
     favecancel->do_callback();}
           tooltip {Set the current path to the selected entry and exit} xywh {20 61 70 20} labelfont 1 labelsize 12
diff --git a/src/UI/MicrotonalUI.fl b/src/UI/MicrotonalUI.fl
index 7c60de7..ccef738 100644
--- a/src/UI/MicrotonalUI.fl
+++ b/src/UI/MicrotonalUI.fl
@@ -65,7 +65,7 @@ class MicrotonalUI {} {
     Fl_Window microtonaluiwindow {
       label Scales
       callback {scaleClose->do_callback();}
-      xywh {612 332 410 485} type Double hide resizable
+      xywh {364 315 410 485} type Double hide resizable
       code0 {scaleDW = o->w(); scaleDH = o->h();}
       code1 {o->size_range(scaleDW, scaleDH, 0, 0, 0, 0, 1);}
     } {
@@ -214,7 +214,7 @@ class MicrotonalUI {} {
         }
         Fl_Group Tuning {
           label {Tunings:}
-          xywh {7 144 190 300} box ENGRAVED_FRAME labelfont 1 labelsize 11
+          xywh {7 144 190 300} box ENGRAVED_FRAME labelfont 1 labelsize 11 align 5
         } {
           Fl_Input tuningsinput {
             tooltip {You must retune if you change this.} xywh {10 147 182 258} type Multiline labelfont 1 labelsize 11 align 5 when 2
@@ -237,8 +237,8 @@ class MicrotonalUI {} {
             tooltip {Inport Scala .scl file (tunnings)} xywh {85 417 100 20} box THIN_UP_BOX labelfont 1 labelsize 10
           }
         }
-        Fl_Group keymappinggroup {
-          label {Keyboard Mapping:}
+        Fl_Group Keymap {
+          label {Keyboard Map:}
           xywh {195 144 206 300} box ENGRAVED_FRAME labelfont 1 labelsize 11
         } {
           Fl_Input mappinginput {
@@ -372,7 +372,7 @@ class MicrotonalUI {} {
           send_data(TOPLEVEL::action::forceUpdate, SCALES::control::enableKeyboardMap, o->value(), TOPLEVEL::type::Integer);}
           tooltip {Enable the Mapping (otherwise the mapping is linear)} xywh {212 166 20 21} down_box DOWN_BOX color 50 align 33
           code0 {o->value(microtonal->Pmappingenabled);}
-          code1 {if (microtonal->Pmappingenabled==0) keymappinggroup->deactivate();}
+          code1 {if (microtonal->Pmappingenabled==0) Keymap->deactivate();}
           class Fl_Check_Button2
         }
         Fl_Button applybutton {
@@ -469,9 +469,9 @@ class MicrotonalUI {} {
             mappingenabledbutton->value(value_bool);
             checkInvert();
             if (value_bool)
-                keymappinggroup->activate();
+                Keymap->activate();
             else
-                keymappinggroup->deactivate();
+                Keymap->deactivate();
             break;
         case SCALES::control::lowKey:
             firstnotecounter->value(value_int);
@@ -626,7 +626,7 @@ class MicrotonalUI {} {
     tuningsinput->textsize(size14);
     octavesizeoutput->textsize(size14);
     importscl->labelsize(size);
-    keymappinggroup->labelsize(11);
+    Keymap->labelsize(size11);
     mappinginput->textsize(size14);
     first1->labelsize(size11);
     first2->labelsize(size11);
diff --git a/src/UI/OscilGenUI.fl b/src/UI/OscilGenUI.fl
index f6abb09..7602126 100644
--- a/src/UI/OscilGenUI.fl
+++ b/src/UI/OscilGenUI.fl
@@ -674,11 +674,11 @@ o->hide();}
           class WidgetPDial
         }
         Fl_Check_Button filterpref {
-          class Fl_Check_Button2
           label F
           callback {//
           send_data(TOPLEVEL::action::forceUpdate, OSCILLATOR::control::filterBeforeWaveshape, o->value(), TOPLEVEL::type::Integer);}
           tooltip {Apply the filter before the waveshaping} xywh {415 313 20 20} down_box DOWN_BOX labelsize 10 align 24
+          class Fl_Check_Button2
         }
         Fl_Dial filtervalue2 {
           callback {//
@@ -721,11 +721,11 @@ o->hide();}
           xywh {670 365 55 15} type Simple labelsize 10 align 129 minimum -64 maximum 64 step 1 textfont 1 textsize 10
         }
         Fl_Check_Button harmonicshiftpre {
-          class Fl_Check_Button2
           label {Shift 1st}
           callback {//
           send_data(TOPLEVEL::action::forceUpdate, OSCILLATOR::control::shiftBeforeWaveshapeAndFilter, o->value(), TOPLEVEL::type::Integer);}
           tooltip {Apply the harmonic shift before the waveshaping and filtering} xywh {668 383 56 20} down_box DOWN_BOX labelsize 10 align 24
+          class Fl_Check_Button2
         }
       }
       Fl_Group adaptiveGroup {
@@ -759,7 +759,7 @@ o->hide();}
         label {Adpt.Harm.}
         callback {//
           send_data(TOPLEVEL::action::forceUpdate, OSCILLATOR::control::adaptiveHarmonicsType, o->value(), TOPLEVEL::type::Integer);}
-        tooltip {The type of the addaptive harmonics} xywh {670 425 55 15} down_box BORDER_BOX labelsize 10 align 129 when 6 textfont 1 textsize 10
+        tooltip {The type of the adaptive harmonics} xywh {670 425 55 15} down_box BORDER_BOX labelsize 10 align 129 when 6 textfont 1 textsize 10
         code0 {o->add("OFF");o->add("ON");o->add("Square");o->add("2xSub");o->add("2xAdd");o->add("3xSub");o->add("3xAdd");o->add("4xSub");o->add("4xAdd");}
       } {}
       Fl_Group modulationGroup {
diff --git a/src/globals.h b/src/globals.h
index 4c53b52..1884c14 100644
--- a/src/globals.h
+++ b/src/globals.h
@@ -131,6 +131,7 @@ namespace _SYS_
 
     enum mute {Idle, Pending, Fading, Active, Complete, Request, Immediate};
 
+    // session types and stages
     enum type {Normal, Default, JackFirst, JackSecond, StartupFirst, StartupSecond, InProgram, RestoreConf};
 }
 
